/*1. Omogućiti korinsiku unos dimenzija kvadratne matrice dimenzija m * m
gdje je m neparan i 4 < m <= 24 Popuniti matricu pseudo slucajnim brojevima iz [-19, 25]
izracunati aritmeticku sredinu elemenata ispod glavvne dijagonale te asr elemenata iznad sporedne dijagonale
Zatim izracunati i na ekran ispisati apsolutnu vrijednost razlike izracunatih vrijednosti*/

#include<stdlib.h>
#include<math.h>
#include<stdio.h>
#include<time.h>

int main(void){
 
    int m, br1 = 0, br2 = 0;   //dva brojača za sporednu i glavnu dijagonalu..
    int matrix[24][24];     
    float svgl = 0, svsp = 0, pom = 0;       //sv glavne dijagonale, sv sporedne dijagonale
    
    printf("Unesite dimenzije matrice: ");
    do{
        scanf("%d", &m);
    }
    while(m <= 4 || m >=  25 || m % 2 == 0);     //zadnji uvjeti do kojih se smije ispuniti
    
           srand((unsigned) time (NULL));     //moraš deklarirati u mainu da možeš koristiti rand() rand_max i to...
     
    for(int i = 0; i < m; i++){     //opet prolaziš kroz redove...
        
        for(int j = 0; j < m; j++){   //opet prolaziš kroz stupce...
            matrix[i][j] = -19 + (float)rand() / RAND_MAX * (25 - (-19));    /*ovo samo nauči napamet, uvijek je na istu shemu, 
                                                                           na matricu stavljaš uvijek i i j, a ne broj polja*/
        }
    }
    
    for(int i = 0; i < m; i++){     //opet kroz redove
        for(int j = 0; j < m; j++){     //opet kroz stupce
            printf("%d   ", matrix[i][j]);     //print tablice, uvijek ostavi razmak nakon %d...
        }
        printf("\n");    //idi na novi red
    }
    
    for(int i = 0; i < m; i++){     //redovi
        for(int j = 0; j < m; j++){     //stupci
            if(i > j){      //ovo nauči isto napamet, za ispod glavne dijagonale
                svgl += matrix[i][j];     //matricu dodaješ srednjoj vrijednosti
                br1 ++;     //brojač postaviš da ide +1
            }
        }
    }
     
    for(int i = 0; i < m; i++){      //redovi
        for(int j = 0; j < m; j++){      //stupci
            if(i + j < m - 1){      //za srednju vrijednost iznad sporedne dijagonale
                svsp += matrix[i][j];       //matricu dodaješ srednjoj vrijednosti....
                br2 ++;      //drugi brojač isto postaviš da ide +1...
            }
        }
    }
    
    svgl /= br1;    //srednja vrijednost glavne dijagonale djeliš sa brojačem..
    svsp /= br2;    //srednja vrijednost sporedne dijagonale djeliš sa brojačem
    printf("\nSrednja vrijednost elemenata ispod glavne dijagonale: %8.2f \n", svgl);  //osmica na floatu označuje razmak??
    printf("Srednja vrijednost elemenata iznad sporedne dijagonale: %8.2f \n", svsp);  //isto valjda
    
    pom = (float)abs(svgl - svsp);    //apsolutna vrijednost razlike izracunatih vrijednosti, dodaj float na abs(apsolutnu)
    
    printf("\nApsoludtna vrijednost elemenata: %8.2f \n", pom);
    
    
    
    
    return 0;
}
